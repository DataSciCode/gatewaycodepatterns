
*Get Filters
  DATA lt_filter_select_options TYPE /iwbep/t_mgw_select_option.
  DATA ls_filter TYPE /iwbep/s_mgw_select_option.
  DATA ls_select_option TYPE /iwbep/s_cod_select_option.
  lt_filter_select_options = io_tech_request_context->get_filter( )->get_filter_select_options( ).
  "Replace 'PLANT' with suitable property name (all capitals)
  READ TABLE lt_filter_select_options INTO ls_filter WITH KEY property = 'PLANT'.
    IF sy-subrc EQ 0.
      READ TABLE ls_filter-select_options INTO ls_select_option INDEX 1.
      lv_plant = ls_select_option-low.
    ENDIF.

*Get Open SQL WHERE Clause from $filter
  DATA: lv_osql_where_clause TYPE string. 
  lv_osql_where_clause = io_tech_request_context->get_osql_where_clause( ).

*Get Source Keys. If query is through Navigation
  DATA: lt_parent_keys            TYPE /iwbep/t_mgw_tech_pairs,
        ls_parent_key             TYPE /iwbep/s_mgw_tech_pair.
  "Get Parent entity name
  IF io_tech_request_context->get_source_entity_type_name( ) = 'Material'.
    "get parent keys
    lt_parent_keys = io_tech_request_context->get_source_keys( ).
    READ TABLE lt_parent_keys INTO ls_parent_key WITH KEY name = 'MATERIALNUMBER'.
    IF sy-subrc EQ 0.
      lv_material_number = ls_parent_key-value.
    ENDIF.
  ENDIF.

*Get Open search string
  DATA: lv_search_string  TYPE string.
  DATA: ltr_vendor_name   TYPE RANGE OF name1_gp,
        lsr_vendor_name   LIKE LINE OF ltr_vendor_name.
  lv_search_string = io_tech_request_context->get_search_string( ).
  "Create a range table to be used in a SELECT statement. Replace 'Vendor' above
  IF lv_search_string IS NOT INITIAL.
    CONCATENATE '*' lv_search_string '*' INTO lsr_vendor_name-low.
    lsr_vendor_name-option = 'CP'.
    lsr_vendor_name-sign = 'I'.
    APPEND lsr_vendor_name TO ltr_vendor_name.
  ENDIF.

*Top&Skip
    DATA: lv_top        TYPE i.
    DATA: lv_skip       TYPE i.
    DATA: lv_total      TYPE i.
    DATA: lv_start_from TYPE i.

    lv_top = io_tech_request_context->get_top( ).
    IF lv_top EQ 0.
      lv_top = 100. "If $top was not sent, send maximum 100 rows
    ENDIF.
    lv_skip = io_tech_request_context->get_skip( ).
    lv_total = lv_top + lv_skip.
    lv_start_from = lv_skip + 1.
      "Remove rows to be skipped
      IF lv_skip GT 0.
        DELETE lt_customers FROM 1 TO lv_skip.
      ENDIF.
